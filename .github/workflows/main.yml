name: build

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  linters:
    name: Linters & Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        ports: [ "5432:5432" ]
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.2.0

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: |
          yarn install --pure-lockfile

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.1

      - name: Install PostgreSQL 12 client
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config deployment true
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run linters
        run: |
          bundle exec bin/rubocop --parallel

      - name: Run security checks
        run: |
          bundle exec bin/bundler-audit --update
          bundle exec bin/brakeman -q -w2

      - name: Run Tests
        env:
          PG_DATABASE: postgres
          PG_HOST: localhost
          PG_USER: postgres
          PG_PASSWORD: password
          RAILS_ENV: test
          WITH_COVERAGE: true
          DISABLE_SPRING: 1
        run: |
          bin/rails db:setup
          bundle exec rspec --format doc
           